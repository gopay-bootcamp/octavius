// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: internal/pkg/protofiles/client_cp/metadata_service.proto

package client_cp

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_internal_pkg_protofiles_client_cp_metadata_service_proto protoreflect.FileDescriptor

var file_internal_pkg_protofiles_client_cp_metadata_service_proto_rawDesc = []byte{
	0x0a, 0x38, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x70, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x70, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x85, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x0d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0e, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x72, 0x72, 0x61, 0x79, 0x42, 0x2c, 0x5a,
	0x2a, 0x6f, 0x63, 0x74, 0x61, 0x76, 0x69, 0x75, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_internal_pkg_protofiles_client_cp_metadata_service_proto_goTypes = []interface{}{
	(*RequestToPostMetadata)(nil),   // 0: RequestToPostMetadata
	(*RequestToGetAllMetadata)(nil), // 1: RequestToGetAllMetadata
	(*MetadataName)(nil),            // 2: MetadataName
	(*MetadataArray)(nil),           // 3: MetadataArray
}
var file_internal_pkg_protofiles_client_cp_metadata_service_proto_depIdxs = []int32{
	0, // 0: MetadataServices.PostMetadata:input_type -> RequestToPostMetadata
	1, // 1: MetadataServices.GetAllMetadata:input_type -> RequestToGetAllMetadata
	2, // 2: MetadataServices.PostMetadata:output_type -> MetadataName
	3, // 3: MetadataServices.GetAllMetadata:output_type -> MetadataArray
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_pkg_protofiles_client_cp_metadata_service_proto_init() }
func file_internal_pkg_protofiles_client_cp_metadata_service_proto_init() {
	if File_internal_pkg_protofiles_client_cp_metadata_service_proto != nil {
		return
	}
	file_internal_pkg_protofiles_client_cp_metadata_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_pkg_protofiles_client_cp_metadata_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_pkg_protofiles_client_cp_metadata_service_proto_goTypes,
		DependencyIndexes: file_internal_pkg_protofiles_client_cp_metadata_service_proto_depIdxs,
	}.Build()
	File_internal_pkg_protofiles_client_cp_metadata_service_proto = out.File
	file_internal_pkg_protofiles_client_cp_metadata_service_proto_rawDesc = nil
	file_internal_pkg_protofiles_client_cp_metadata_service_proto_goTypes = nil
	file_internal_pkg_protofiles_client_cp_metadata_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MetadataServicesClient is the client API for MetadataServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetadataServicesClient interface {
	PostMetadata(ctx context.Context, in *RequestToPostMetadata, opts ...grpc.CallOption) (*MetadataName, error)
	GetAllMetadata(ctx context.Context, in *RequestToGetAllMetadata, opts ...grpc.CallOption) (*MetadataArray, error)
}

type metadataServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewMetadataServicesClient(cc grpc.ClientConnInterface) MetadataServicesClient {
	return &metadataServicesClient{cc}
}

func (c *metadataServicesClient) PostMetadata(ctx context.Context, in *RequestToPostMetadata, opts ...grpc.CallOption) (*MetadataName, error) {
	out := new(MetadataName)
	err := c.cc.Invoke(ctx, "/MetadataServices/PostMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServicesClient) GetAllMetadata(ctx context.Context, in *RequestToGetAllMetadata, opts ...grpc.CallOption) (*MetadataArray, error) {
	out := new(MetadataArray)
	err := c.cc.Invoke(ctx, "/MetadataServices/GetAllMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetadataServicesServer is the server API for MetadataServices service.
type MetadataServicesServer interface {
	PostMetadata(context.Context, *RequestToPostMetadata) (*MetadataName, error)
	GetAllMetadata(context.Context, *RequestToGetAllMetadata) (*MetadataArray, error)
}

// UnimplementedMetadataServicesServer can be embedded to have forward compatible implementations.
type UnimplementedMetadataServicesServer struct {
}

func (*UnimplementedMetadataServicesServer) PostMetadata(context.Context, *RequestToPostMetadata) (*MetadataName, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMetadata not implemented")
}
func (*UnimplementedMetadataServicesServer) GetAllMetadata(context.Context, *RequestToGetAllMetadata) (*MetadataArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllMetadata not implemented")
}

func RegisterMetadataServicesServer(s *grpc.Server, srv MetadataServicesServer) {
	s.RegisterService(&_MetadataServices_serviceDesc, srv)
}

func _MetadataServices_PostMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestToPostMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServicesServer).PostMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataServices/PostMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServicesServer).PostMetadata(ctx, req.(*RequestToPostMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataServices_GetAllMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestToGetAllMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServicesServer).GetAllMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetadataServices/GetAllMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServicesServer).GetAllMetadata(ctx, req.(*RequestToGetAllMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetadataServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MetadataServices",
	HandlerType: (*MetadataServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostMetadata",
			Handler:    _MetadataServices_PostMetadata_Handler,
		},
		{
			MethodName: "GetAllMetadata",
			Handler:    _MetadataServices_GetAllMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/pkg/protofiles/client_cp/metadata_service.proto",
}
