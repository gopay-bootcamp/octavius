syntax = "proto3";
option go_package = "octavius/pkg/protobuf";

message Error{
    int64 errorCode=1;
    string errorMessage=2;

}

message secret {
    string name=1 [json_name="name"];
    string description=2 [json_name="description"];
}
message arg {
    string name=1 [json_name="name"];
    string description=2 [json_name="description"];
}
message env_vars {
    repeated secret secrets=1 [json_name="secrets"];
    repeated arg args=2 [json_name="args"];
}

message metadata {
    string name=1 [json_name="name"];
    string description=2 [json_name="description"];
    string image_name=3 [json_name="image_name"];
    env_vars env_vars=4 [json_name="env_vars"];
    repeated string authorized_groups=5 [json_name="authorized_groups"];
    string author=6 [json_name="author"];
    string contributors=7 [json_name="contributors"];
    string organization=8 [json_name="organization"];
}

message client_info {
    string client_email=1;
    string access_token=2;
}

message request_to_post_metadata {
    metadata metadata=1;
    client_info client_info=2;
}


message request_for_stream_log {
    client_info client_info=1;
    string job_name=2;
}

message request_for_execute{
    client_info client_info=1;
    string job_name=2;
    map<string,string> job_data=3;
}

message response {
    string status = 1;
}
message MetadataName {
    Error err=1;
    string name=2;
}

message request_to_get_all_metadata{

}

message metadataArray{
    Error err=1;
    repeated metadata value=2;

}

message log{
    string log=1;
}
service OctaviusServices{

   rpc GetStreamLogs(request_for_stream_log) returns (stream log);
   rpc ExecuteJob(request_for_execute) returns (response);
   rpc Post_metadata(request_to_post_metadata) returns (MetadataName);
   rpc Get_all_metadata(request_to_get_all_metadata) returns (metadataArray);

}