syntax = "proto3";
option go_package = "octavius/pkg/protobuf";

message Error{
    int64 error_code=1;
    string error_message=2;

}

message Secret {
    string name=1 [json_name="name"];
    string description=2 [json_name="description"];
}
message Arg {
    string name=1 [json_name="name"];
    string description=2 [json_name="description"];
}
message EnvVars {
    repeated Secret secrets=1 [json_name="secrets"];
    repeated Arg args=2 [json_name="args"];
}

message Metadata {
    string name=1 [json_name="name"];
    string description=2 [json_name="description"];
    string image_name=3 [json_name="image_name"];
    EnvVars env_vars=4 [json_name="env_vars"];
    repeated string authorized_groups=5 [json_name="authorized_groups"];
    string author=6 [json_name="author"];
    string contributors=7 [json_name="contributors"];
    string organization=8 [json_name="organization"];
}

message ClientInfo {
    string client_email=1;
    string access_token=2;
}

message RequestToPostMetadata {
    Metadata metadata=1;
    ClientInfo client_info=2;
}


message RequestForStreamLog {
    ClientInfo client_info=1;
    string job_name=2;
}

message RequestForExecute{
    ClientInfo client_info=1;
    string job_name=2;
    map<string,string> job_data=3;
}

message Response {
    string status = 1;
}
message MetadataName {
    Error err=1;
    string name=2;
}

message RequestToGetAllMetadata{

}

message MetadataArray{
    Error err=1;
    repeated Metadata values=2;

}

message Log{
    string log=1;
}
service OctaviusServices{

   rpc GetStreamLogs(RequestForStreamLog) returns (stream Log);
   rpc ExecuteJob(RequestForExecute) returns (Response);
   rpc PostMetadata(RequestToPostMetadata) returns (MetadataName);
   rpc GetAllMetadata(RequestToGetAllMetadata) returns (MetadataArray);

}